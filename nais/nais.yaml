---
apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  labels:
    team: {{team}}
  annotations:
    "nais.io/run-as-group": "0"
    "nais.io/read-only-file-system": "false"
  name: {{app}}-redis
  namespace: {{namespace}}
spec:
  image: bitnami/redis:6.2
  port: 6379
  replicas: # A single Redis-app doesn't scale
    min: 1
    max: 1 # More replicas doesn't sync
  resources: # you need to monitor the resource usage yourself
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  service:
    port: 6379
    protocol: redis
  accessPolicy: # for GCP
    inbound:
      rules:
        - application: {{app}}
  envFrom:
    - secret: {{app}}-redis-secret

---

apiVersion: nais.io/v1alpha1
kind: Application
metadata:
  name: {{app}}
  namespace: {{namespace}}
  labels:
    team: {{team}}
    app: {{app}}
spec:
  image: {{image}}
  port: 8080
  liveness:
    path: /isalive
    timeout: 1
    periodSeconds: 5
    failureThreshold: 10
  readiness:
    path: /isready
    timeout: 1
  prometheus:
    enabled: true
  secureLogs:
    enabled: true
  replicas:
    min: 1
    max: 1
    cpuThresholdPercentage: 75
  kafka:
     pool: {{ kafka_pool }}
  limits:
    cpu: "200m"
    memory: "256Mi"
  requests:
    cpu: "200m"
    memory: "256Mi"
  {{ ingresses }}
  tokenx:
    enabled: true
  accessPolicy:
    inbound:
      rules:
        - application: dp-quizshow
  env:
    - name: REDIS_HOST
      value: {{app}}-redis.{{namespace}}.svc.cluster.local
  envFrom:
    - secret: {{app}}-redis-secret
