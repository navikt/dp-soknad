name: Build and deploy

on: [push]


jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        with:
          arguments: build installDist --configuration-cache

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdagpenger
          push_image: true # optional, default true
          dockerfile: mediator/Dockerfile # optional, default Dockerfile
          docker_context: mediator # optional, default .
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
      - name: Archive NAIS yaml
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: nais-yaml
          path: mediator/nais
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    needs: [ build ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v3
        with:
          name: nais-yaml
          path: nais
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/dev/vars.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    needs: [ build ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v3
        with:
          name: nais-yaml
          path: nais
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais/prod/vars.yaml
          PRINT_PAYLOAD: true

